# Generated by Django 4.2.5 on 2023-09-22 21:17

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('LB_API', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('question_id', models.IntegerField(db_column='QUESTION_id')),
                ('user_id', models.IntegerField(db_column='USER_id')),
            ],
            options={
                'db_table': 'ANSWER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuctionOffer',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField()),
                ('auction_id', models.IntegerField(db_column='AUCTION_id')),
                ('user_id', models.IntegerField(db_column='USER_id')),
            ],
            options={
                'db_table': 'AUCTION_OFFER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuctionState',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('state', models.CharField(db_comment='CANCELED/AVAILABLE/FINISHED', max_length=45)),
            ],
            options={
                'db_table': 'AUCTION_STATE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookCategory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'BOOK_CATEGORY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookState',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('state', models.CharField(db_comment='SOLD/AVAILABLE/IN AUCTION', max_length=45)),
            ],
            options={
                'db_table': 'BOOK_STATE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('direction', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'BRANCH',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('book_id', models.IntegerField(db_column='BOOK_id')),
            ],
            options={
                'db_table': 'CHAT_ROOM',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'COMMUNE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Direction',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('calle', models.CharField(max_length=50)),
                ('numero', models.IntegerField()),
                ('commune_id', models.IntegerField(db_column='COMMUNE_id')),
            ],
            options={
                'db_table': 'DIRECTION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ForumCategory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'FORUM_CATEGORY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ForumUser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(db_column='USER_id')),
                ('forum_id', models.IntegerField(db_column='FORUM_id')),
            ],
            options={
                'db_table': 'FORUM_USER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('is_read', models.CharField(max_length=10)),
                ('user_id', models.IntegerField(db_column='USER_id')),
            ],
            options={
                'db_table': 'NOTIFICATION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('rut', models.CharField(max_length=12)),
                ('method_name', models.CharField(max_length=100)),
                ('card_number', models.CharField(max_length=20)),
                ('expiration_month', models.IntegerField()),
                ('expiration_year', models.IntegerField()),
                ('cvv', models.CharField(max_length=4)),
                ('user_id', models.IntegerField(db_column='USER_id')),
            ],
            options={
                'db_table': 'PAYMENT_METHOD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostVenta',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('purchase_detail_id', models.IntegerField(db_column='PURCHASE_DETAIL_id')),
                ('state_post_venta_id', models.IntegerField(db_column='STATE_POST_VENTA_id')),
                ('branch_id', models.IntegerField(db_column='BRANCH_id')),
            ],
            options={
                'db_table': 'POST_VENTA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseDetail',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('purchase_date', models.DateTimeField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField()),
                ('chat_room_id', models.IntegerField(blank=True, db_column='CHAT_ROOM_id', null=True)),
                ('auction_id', models.IntegerField(blank=True, db_column='AUCTION_id', null=True)),
                ('purchase_detail_state_id', models.IntegerField(db_column='PURCHASE_DETAIL_STATE_id')),
            ],
            options={
                'db_table': 'PURCHASE_DETAIL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseDetailState',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('state', models.CharField(db_comment='CANCELED/IN PROCESS/APPROVED', max_length=100)),
            ],
            options={
                'db_table': 'PURCHASE_DETAIL_STATE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('book_id', models.IntegerField(db_column='BOOK_id')),
                ('user_id', models.IntegerField(db_column='USER_id')),
            ],
            options={
                'db_table': 'QUESTION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('reason', models.TextField()),
                ('date_refund', models.DateTimeField()),
                ('post_venta_id', models.IntegerField(db_column='POST_VENTA_id')),
            ],
            options={
                'db_table': 'REFUND',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('user_id', models.IntegerField(db_column='USER_id')),
            ],
            options={
                'db_table': 'REPORT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewLike',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(db_column='USER_id')),
                ('review_id', models.IntegerField(db_column='REVIEW_id')),
            ],
            options={
                'db_table': 'REVIEW_LIKE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatePostVenta',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('state', models.CharField(db_comment='ON HOLD: En espera de recibirlo la sucursal\nCANCELED: El libro nunca llego a la sucursal\nCONFIRMED: La sucursal confirmó la llegada del libro\nPAYED: El contador pagó al vendedro', max_length=100)),
            ],
            options={
                'db_table': 'STATE_POST_VENTA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(db_column='USER_id')),
                ('role_id', models.IntegerField(db_column='ROLE_id')),
            ],
            options={
                'db_table': 'USER_ROLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserRoom',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(db_column='USER_id')),
                ('chat_room_id', models.IntegerField(db_column='CHAT_ROOM_id')),
            ],
            options={
                'db_table': 'USER_ROOM',
                'managed': False,
            },
        ),
        migrations.RemoveField(
            model_name='auction_offer',
            name='auction_id',
        ),
        migrations.RemoveField(
            model_name='auction_offer',
            name='user_id',
        ),
        migrations.DeleteModel(
            name='auction_state',
        ),
        migrations.DeleteModel(
            name='book_category',
        ),
        migrations.DeleteModel(
            name='book_state',
        ),
        migrations.RemoveField(
            model_name='chat_room',
            name='book_id',
        ),
        migrations.DeleteModel(
            name='forum_category',
        ),
        migrations.RemoveField(
            model_name='forum_user',
            name='forum_id',
        ),
        migrations.RemoveField(
            model_name='forum_user',
            name='user_id',
        ),
        migrations.RemoveField(
            model_name='review_like',
            name='review_id',
        ),
        migrations.RemoveField(
            model_name='review_like',
            name='user_id',
        ),
        migrations.RemoveField(
            model_name='user_role',
            name='role_id',
        ),
        migrations.RemoveField(
            model_name='user_role',
            name='user_id',
        ),
        migrations.RemoveField(
            model_name='user_room',
            name='chat_r',
        ),
        migrations.RemoveField(
            model_name='user_room',
            name='user_id',
        ),
        migrations.AlterModelOptions(
            name='auction',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='book',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='comments',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='discussion',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='forum',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='message',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='review',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='role',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='subscription',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'managed': False},
        ),
        migrations.DeleteModel(
            name='auction_offer',
        ),
        migrations.DeleteModel(
            name='chat_room',
        ),
        migrations.DeleteModel(
            name='forum_user',
        ),
        migrations.DeleteModel(
            name='review_like',
        ),
        migrations.DeleteModel(
            name='user_role',
        ),
        migrations.DeleteModel(
            name='user_room',
        ),
    ]
